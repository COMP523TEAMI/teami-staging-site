{"ast":null,"code":"import _slicedToArray from\"/Users/linqiaosen/Desktop/domo/staging-demo-i/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Link}from\"@material-ui/core\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Title from\"../Template/Title.jsx\";import SaleModal from\"./SaleModal\";import styles from\"./Dashboard.module.css\";var Purchases=function Purchases(_ref){var purchasedStocks=_ref.purchasedStocks;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),start=_useState2[0],setStart=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),stock=_useState4[0],setStock=_useState4[1];var roundNumber=function roundNumber(num){return Math.round((num+Number.EPSILON)*100)/100;};var openSaleModal=function openSaleModal(stock){setStock(stock);setStart(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{minHeight:\"200px\"}},/*#__PURE__*/React.createElement(Title,null,\"Stocks in Your Portfolio\"),/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Company Ticker\"),/*#__PURE__*/React.createElement(TableCell,null,\"Name\"),/*#__PURE__*/React.createElement(TableCell,null,\"Quantity\"),/*#__PURE__*/React.createElement(TableCell,null,\"Price of Purchase\"),/*#__PURE__*/React.createElement(TableCell,null,\"Purchase Total\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Current Price\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Current Total\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Difference\"))),/*#__PURE__*/React.createElement(TableBody,null,purchasedStocks.map(function(row){var difference=(row.currentPrice-row.purchasePrice)/row.currentPrice;var purchaseTotal=Number(row.quantity)*Number(row.purchasePrice);var currentTotal=Number(row.quantity)*Number(row.currentPrice);return/*#__PURE__*/React.createElement(TableRow,{key:row.id},/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return openSaleModal(row);}},row.ticker)),/*#__PURE__*/React.createElement(TableCell,null,row.name||\"----\"),/*#__PURE__*/React.createElement(TableCell,null,row.quantity||\"----\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"$\",row.purchasePrice.toLocaleString()||\"----\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"$\",roundNumber(purchaseTotal).toLocaleString()||\"----\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\",className:row.currentPrice>=row.purchasePrice?styles.positive:styles.negative},\"$\",row.currentPrice.toLocaleString()||\"----\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\",className:currentTotal>=purchaseTotal?styles.positive:styles.negative},\"$\",roundNumber(currentTotal).toLocaleString()||\"----\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\",className:difference>=0?styles.positive:styles.negative},difference>=0?\"▲\":\"▼\",\" \",Math.abs(difference*100).toFixed(2),\"%\"));}))),start&&stock&&/*#__PURE__*/React.createElement(SaleModal,{setStart:setStart,stock:stock})));};export default Purchases;","map":{"version":3,"sources":["/Users/linqiaosen/Desktop/domo/staging-demo-i/client/src/components/Dashboard/Purchases.jsx"],"names":["React","useState","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","SaleModal","styles","Purchases","purchasedStocks","start","setStart","undefined","stock","setStock","roundNumber","num","Math","round","Number","EPSILON","openSaleModal","minHeight","map","row","difference","currentPrice","purchasePrice","purchaseTotal","quantity","currentTotal","id","ticker","name","toLocaleString","positive","negative","abs","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"../Template/Title.jsx\";\r\nimport SaleModal from \"./SaleModal\";\r\nimport styles from \"./Dashboard.module.css\";\r\n\r\nconst Purchases = ({ purchasedStocks }) => {\r\n  const [start, setStart] = useState(false);\r\n  const [stock, setStock] = useState(undefined);\r\n\r\n  const roundNumber = (num) => {\r\n    return Math.round((num + Number.EPSILON) * 100) / 100;\r\n  };\r\n\r\n  const openSaleModal = (stock) => {\r\n    setStock(stock);\r\n    setStart(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ minHeight: \"200px\" }}>\r\n        <Title>Stocks in Your Portfolio</Title>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Company Ticker</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Quantity</TableCell>\r\n              <TableCell>Price of Purchase</TableCell>\r\n              <TableCell>Purchase Total</TableCell>\r\n              <TableCell align=\"right\">Current Price</TableCell>\r\n              <TableCell align=\"right\">Current Total</TableCell>\r\n              <TableCell align=\"right\">Difference</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {purchasedStocks.map((row) => {\r\n              const difference =\r\n                (row.currentPrice - row.purchasePrice) / row.currentPrice;\r\n              const purchaseTotal =\r\n                Number(row.quantity) * Number(row.purchasePrice);\r\n              const currentTotal =\r\n                Number(row.quantity) * Number(row.currentPrice);\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>\r\n                    <Link onClick={() => openSaleModal(row)}>{row.ticker}</Link>\r\n                  </TableCell>\r\n                  <TableCell>{row.name || \"----\"}</TableCell>\r\n                  <TableCell>{row.quantity || \"----\"}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    ${row.purchasePrice.toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    ${roundNumber(purchaseTotal).toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"right\"\r\n                    className={\r\n                      row.currentPrice >= row.purchasePrice\r\n                        ? styles.positive\r\n                        : styles.negative\r\n                    }\r\n                  >\r\n                    ${row.currentPrice.toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"right\"\r\n                    className={\r\n                      currentTotal >= purchaseTotal\r\n                        ? styles.positive\r\n                        : styles.negative\r\n                    }\r\n                  >\r\n                    ${roundNumber(currentTotal).toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"right\"\r\n                    className={\r\n                      difference >= 0 ? styles.positive : styles.negative\r\n                    }\r\n                  >\r\n                    {difference >= 0 ? \"▲\" : \"▼\"}{\" \"}\r\n                    {Math.abs(difference * 100).toFixed(2)}%\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        {start && stock && (\r\n          <SaleModal setStart={setStart} stock={stock} />\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Purchases;\r\n"]},"metadata":{},"sourceType":"module"}