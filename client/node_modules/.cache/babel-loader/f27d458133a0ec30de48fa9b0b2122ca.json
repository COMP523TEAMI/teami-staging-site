{"ast":null,"code":"import _slicedToArray from\"/Users/linqiaosen/Desktop/domo/staging-demo-i/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import UserContext from\"../../context/UserContext\";import{Typography}from\"@material-ui/core/\";import Title from\"../Template/Title.jsx\";import styles from\"./Dashboard.module.css\";var Balance=function Balance(_ref){var purchasedStocks=_ref.purchasedStocks;var _useContext=useContext(UserContext),userData=_useContext.userData;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),portfolioBalance=_useState2[0],setPortfolioBalance=_useState2[1];useEffect(function(){var portfolioBalance=function portfolioBalance(){var total=0;purchasedStocks.forEach(function(stock){total+=Number(stock.currentPrice)*Number(stock.quantity);});return Math.round((total+Number.EPSILON)*100)/100;};setPortfolioBalance(portfolioBalance());},[purchasedStocks]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Title,null,\"Current Balance\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:styles.depositContext},/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",align:\"center\"},\"Cash Balance:\"),/*#__PURE__*/React.createElement(Typography,{component:\"p\",variant:\"h6\",align:\"center\"},\"$\",userData?userData.user.balance.toLocaleString():\"$---\"),/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",align:\"center\"},\"Portfolio Balance:\"),/*#__PURE__*/React.createElement(Typography,{component:\"p\",variant:\"h6\",align:\"center\",gutterBottom:true},\"$\",portfolioBalance.toLocaleString()),/*#__PURE__*/React.createElement(\"div\",{className:styles.addMargin},/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",align:\"center\"},\"Total:\"),/*#__PURE__*/React.createElement(Typography,{component:\"p\",variant:\"h4\",align:\"center\",className:Number(userData.user.balance+portfolioBalance)>=100000?styles.positive:styles.negative},\"$\",userData?(userData.user.balance+portfolioBalance).toLocaleString():\"---\"))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",align:\"center\"},new Date().toDateString())));};/*\r\nconst BarChartCard = ({ sixMonthAverages, stockInfo }) => {\r\n  return (\r\n    <Grid item xs={12} sm component={Card} className={styles.card}>\r\n      <BarChart sixMonthAverages={sixMonthAverages} stockInfo={stockInfo} />\r\n    </Grid>\r\n  );\r\n};\r\n*/export default Balance;","map":{"version":3,"sources":["/Users/linqiaosen/Desktop/domo/staging-demo-i/client/src/components/Dashboard/Balance.jsx"],"names":["React","useContext","useState","useEffect","UserContext","Typography","Title","styles","Balance","purchasedStocks","userData","portfolioBalance","setPortfolioBalance","total","forEach","stock","Number","currentPrice","quantity","Math","round","EPSILON","depositContext","user","balance","toLocaleString","addMargin","positive","negative","Date","toDateString"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyB,IAAtBC,CAAAA,eAAsB,MAAtBA,eAAsB,iBAClBR,UAAU,CAACG,WAAD,CADQ,CAC/BM,QAD+B,aAC/BA,QAD+B,eAESR,QAAQ,CAAC,CAAD,CAFjB,wCAEhCS,gBAFgC,eAEdC,mBAFc,eAIvCT,SAAS,CAAC,UAAM,CACd,GAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAIE,CAAAA,KAAK,CAAG,CAAZ,CACAJ,eAAe,CAACK,OAAhB,CAAwB,SAACC,KAAD,CAAW,CACjCF,KAAK,EAAIG,MAAM,CAACD,KAAK,CAACE,YAAP,CAAN,CAA6BD,MAAM,CAACD,KAAK,CAACG,QAAP,CAA5C,CACD,CAFD,EAIA,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAW,CAACP,KAAK,CAAGG,MAAM,CAACK,OAAhB,EAA2B,GAAtC,EAA6C,GAApD,CACD,CAPD,CAQAT,mBAAmB,CAACD,gBAAgB,EAAjB,CAAnB,CACD,CAVQ,CAUN,CAACF,eAAD,CAVM,CAAT,CAYA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,KAAD,wBADF,cAEE,8BAFF,cAGE,2BAAK,SAAS,CAAEF,MAAM,CAACe,cAAvB,eACE,oBAAC,UAAD,EAAY,KAAK,CAAC,eAAlB,CAAkC,KAAK,CAAC,QAAxC,kBADF,cAKE,oBAAC,UAAD,EAAY,SAAS,CAAC,GAAtB,CAA0B,OAAO,CAAC,IAAlC,CAAuC,KAAK,CAAC,QAA7C,MACIZ,QAAQ,CAAGA,QAAQ,CAACa,IAAT,CAAcC,OAAd,CAAsBC,cAAtB,EAAH,CAA4C,MADxD,CALF,cAQE,oBAAC,UAAD,EAAY,KAAK,CAAC,eAAlB,CAAkC,KAAK,CAAC,QAAxC,uBARF,cAYE,oBAAC,UAAD,EAAY,SAAS,CAAC,GAAtB,CAA0B,OAAO,CAAC,IAAlC,CAAuC,KAAK,CAAC,QAA7C,CAAsD,YAAY,KAAlE,MACId,gBAAgB,CAACc,cAAjB,EADJ,CAZF,cAeE,2BAAK,SAAS,CAAElB,MAAM,CAACmB,SAAvB,eACE,oBAAC,UAAD,EAAY,KAAK,CAAC,eAAlB,CAAkC,KAAK,CAAC,QAAxC,WADF,cAKE,oBAAC,UAAD,EACE,SAAS,CAAC,GADZ,CAEE,OAAO,CAAC,IAFV,CAGE,KAAK,CAAC,QAHR,CAIE,SAAS,CACPV,MAAM,CAACN,QAAQ,CAACa,IAAT,CAAcC,OAAd,CAAwBb,gBAAzB,CAAN,EAAoD,MAApD,CACIJ,MAAM,CAACoB,QADX,CAEIpB,MAAM,CAACqB,QAPf,MAWGlB,QAAQ,CACL,CAACA,QAAQ,CAACa,IAAT,CAAcC,OAAd,CAAwBb,gBAAzB,EAA2Cc,cAA3C,EADK,CAEL,KAbN,CALF,CAfF,CAHF,cAwCE,4CACE,oBAAC,UAAD,EAAY,KAAK,CAAC,eAAlB,CAAkC,KAAK,CAAC,QAAxC,EACG,GAAII,CAAAA,IAAJ,GAAWC,YAAX,EADH,CADF,CAxCF,CADF,CAgDD,CAhED,CAiEA;;;;;;;;EASA,cAAetB,CAAAA,OAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Typography } from \"@material-ui/core/\";\r\nimport Title from \"../Template/Title.jsx\";\r\nimport styles from \"./Dashboard.module.css\";\r\n\r\nconst Balance = ({ purchasedStocks }) => {\r\n  const { userData } = useContext(UserContext);\r\n  const [portfolioBalance, setPortfolioBalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const portfolioBalance = () => {\r\n      let total = 0;\r\n      purchasedStocks.forEach((stock) => {\r\n        total += Number(stock.currentPrice) * Number(stock.quantity);\r\n      });\r\n  \r\n      return Math.round((total + Number.EPSILON) * 100) / 100;\r\n    };\r\n    setPortfolioBalance(portfolioBalance());\r\n  }, [purchasedStocks]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Current Balance</Title>\r\n      <br />\r\n      <div className={styles.depositContext}>\r\n        <Typography color=\"textSecondary\" align=\"center\">\r\n          Cash Balance:\r\n        </Typography>\r\n\r\n        <Typography component=\"p\" variant=\"h6\" align=\"center\">\r\n          ${userData ? userData.user.balance.toLocaleString() : \"$---\"}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" align=\"center\">\r\n          Portfolio Balance:\r\n        </Typography>\r\n\r\n        <Typography component=\"p\" variant=\"h6\" align=\"center\" gutterBottom>\r\n          ${portfolioBalance.toLocaleString()}\r\n        </Typography>\r\n        <div className={styles.addMargin}>\r\n          <Typography color=\"textSecondary\" align=\"center\">\r\n            Total:\r\n          </Typography>\r\n\r\n          <Typography\r\n            component=\"p\"\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            className={\r\n              Number(userData.user.balance + portfolioBalance) >= 100000\r\n                ? styles.positive\r\n                : styles.negative\r\n            }\r\n          >\r\n            $\r\n            {userData\r\n              ? (userData.user.balance + portfolioBalance).toLocaleString()\r\n              : \"---\"}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Typography color=\"textSecondary\" align=\"center\">\r\n          {new Date().toDateString()}\r\n        </Typography>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n/*\r\nconst BarChartCard = ({ sixMonthAverages, stockInfo }) => {\r\n  return (\r\n    <Grid item xs={12} sm component={Card} className={styles.card}>\r\n      <BarChart sixMonthAverages={sixMonthAverages} stockInfo={stockInfo} />\r\n    </Grid>\r\n  );\r\n};\r\n*/\r\nexport default Balance;\r\n"]},"metadata":{},"sourceType":"module"}